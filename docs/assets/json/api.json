{
  "openapi": "3.0.0",
  "info": { "title": "Curve.fi API", "version": "1.0.0" },
  "servers": [{ "url": "https://api.curve.finance/v1" }],
  "components": {
    "parameters": {
      "blockchainId": {
        "in": "path",
        "name": "blockchainId",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "ethereum",
            "arbitrum",
            "aurora",
            "avalanche",
            "base",
            "bsc",
            "celo",
            "fantom",
            "fraxtal",
            "harmony",
            "kava",
            "moonbeam",
            "optimism",
            "polygon",
            "xdai",
            "zkevm",
            "zksync"
          ]
        }
      },
      "registryId": {
        "in": "path",
        "name": "registryId",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "factory",
            "main",
            "crypto",
            "factory-crypto",
            "factory-crvusd",
            "factory-twocrypto",
            "factory-tricrypto",
            "factory-eywa",
            "factory-stable-ng"
          ]
        }
      }
    }
  },
  "paths": {
    "/getAllGauges": {
      "get": {
        "tags": ["Gauges", "Volumes and APYs"],
        "description": "Returns all Curve gauges, on all chains, in all registries. If any Curve pool, anywhere, has a gauge, then it’ll be returned by this endpoint.\nThe only exception are sidechain non-factory gauges, which aren’t indexed by any registry, and have been discontinued for a long time now. On sidechains, only factory gauges exist; on Ethereum, both \"main\" (non-factory) and factory gauges exist.\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getAllPoolsVolume/{blockchainId}": {
      "get": {
        "tags": ["Volumes and APYs"],
        "description": "Returns total 24h volume for a chain.",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getBaseApys/{blockchainId}": {
      "get": {
        "tags": ["Volumes and APYs"],
        "description": "Returns all base APY data for Curve pools on each chain.\n\nNote: [`/getVolumes/{blockchainId}`](#/default/get_getVolumes__blockchainId_) is preferred\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getCrvCircSupply": {
      "get": {
        "tags": ["crvUSD"],
        "description": "Returns the circulating supply of crvUSD",
        "responses": { "200": { "description": null } }
      }
    },
    "/getCrvusdTotalSupply": {
      "get": {
        "tags": ["crvUSD"],
        "description": "Returns the total supply of crvUSD",
        "responses": { "200": { "description": null } }
      }
    },
    "/getFactoGaugesCrvRewards/{blockchainId}": {
      "get": {
        "tags": ["Volumes and APYs"],
        "description": "Returns unboosted CRV APRs for sidechain facto gauges",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getFactoryAPYs/{blockchainId}/{version}": {
      "get": {
        "tags": ["Volumes and APYs"],
        "description": "Returns *inaccurate* volume and base APY data for Curve pools on chains that aren’t indexed by either the [Curve Prices API](https://prices.curve.finance/feeds-docs) or the [Curve subgraphs](https://github.com/curvefi/volume-subgraphs).\nData returned by this endpoint is necessarily inaccurate due to the manual chain-walking involved, coupled with the limitations of RPC endpoints available for this subset of chains. Using this endpoint should be considered an imperfect last resort.\nIf the chain for which you want to retrieve volume and base APY data is available through either [`/getVolumes/{blockchainId}`](#/default/get_getVolumes__blockchainId_) or [`getSubgraphData/[blockchainId]`](#/default/get_getSubgraphData__blockchainId_), please use these.\n",
        "parameters": [
          {
            "in": "path",
            "name": "blockchainId",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["bsc", "kava", "zkevm", "zksync", "fraxtal"]
            }
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "schema": { "type": "string", "enum": ["stable", "crypto"] }
          }
        ],
        "responses": { "200": { "description": null } }
      }
    },
    "/getGas": {
      "get": {
        "tags": ["Misc"],
        "description": "Returns Ethereum gas prices (in gwei) (uses Blocknative API)",
        "responses": { "200": { "description": null } }
      }
    },
    "/getHiddenPools": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns a list of pool ids, grouped by chain id, that are known to be dysfunctional in some way. This list can be used by front-ends to avoid displaying these pools, and protect users from interacting with these pools.",
        "responses": { "200": { "description": null } }
      }
    },
    "/getPlatforms": {
      "get": {
        "tags": ["Misc"],
        "description": "Returns platforms (also known as `blockchainId` in other API endpoints) that Curve is deployed on, and which pool registries are available on each platform.\nUseful to then query e.g. [`/api/getPools/{blockchainId}/{registryId}`](#/default/get_getPools__blockchainId___registryId_)\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getPoolList/{blockchainId}": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns addresses of all pools, in all registries, on a specific chain.\n\nNote: For backward compatibility, in this endpoint the \"factory\" registry is renamed to \"stable-factory\"\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/{blockchainId}/{registryId}": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns information on all pools, in a specific registry, on a specific chain.\n\nNote:\n- Doesn't work for Harmony: its 3pool isn't in the main registry, and Harmony is lacking a crypto registry\n- Doesn't work for Moonbeam: it's lacking a main registry\n",
        "parameters": [
          { "$ref": "#/components/parameters/blockchainId" },
          { "$ref": "#/components/parameters/registryId" }
        ],
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/all/{blockchainId}": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns all pools, in all registries, on a specific chain.\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/all": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns all pools, in all registries, on all chains.\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/big/{blockchainId}": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns all pools whose TVL is ≥$10k, in all registries, on a specific chain.\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/big": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns all pools whose TVL is ≥$10k, in all registries, on all chains.\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/empty/{blockchainId}": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns all pools whose TVL is $0, in all registries, on a specific chain.\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/empty": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns all pools whose TVL is $0, in all registries, on all chains.\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/small/{blockchainId}": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns all pools whose TVL is <$10k, in all registries, on a specific chain.\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getPools/small": {
      "get": {
        "tags": ["Pools"],
        "description": "Returns all pools whose TVL is <$10k, in all registries, on all chains.\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getRegistryAddress": {
      "get": {
        "tags": ["Misc"],
        "description": "Returns address of the Ethereum registry\nSee <https://curve.readthedocs.io/registry-registry.html#registry>\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getSubgraphData/{blockchainId}": {
      "get": {
        "tags": ["Volumes and APYs"],
        "description": "Returns all 24h volume and base APY data for Curve pools on each chain.\nIt relies on [Curve subgraphs](https://github.com/curvefi/volume-subgraphs), and is being slowly transitioned to the more reliable [`/getVolumes/{blockchainId}`](#/default/get_getVolumes__blockchainId_) endpoint (where support for more chains is being added). When this transition is done, this endpoint will however remain available as simple proxy for [`/getVolumes/{blockchainId}`](#/default/get_getVolumes__blockchainId_).\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getVolumes/{blockchainId}": {
      "get": {
        "tags": ["Volumes and APYs"],
        "description": "Returns all 24h volume and base APY data for Curve pools on each chain.\nIt relies on the [Curve Prices API](https://prices.curve.finance/feeds-docs), and is meant as a more reliable replacement to the [`getSubgraphData/[blockchainId]`](#/default/get_getSubgraphData__blockchainId_) endpoints.\n\nNote: Not all chains are currently available on the Curve Prices API. Currently available chains: `ethereum | polygon | arbitrum | base | optimism | fantom`\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getVolumes/ethereum/crvusd-amms": {
      "get": {
        "tags": ["Volumes and APYs", "crvUSD"],
        "description": "Returns last daily volume for each [crvUSD AMM](https://docs.curve.finance/crvUSD/amm/)\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getWeeklyFees": {
      "get": {
        "tags": ["Misc"],
        "description": "Returns weekly fees",
        "responses": { "200": { "description": null } }
      }
    },
    "/getETHprice": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "Returns the current Ethereum USD price",
        "responses": { "200": { "description": null } }
      }
    },
    "/getFactoGauges/{blockchainId}": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "<i>Deprecated: please use `getAllGauges` instead</i>\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getFactoryCryptoPools/{blockchainId}": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "<i>Deprecated: please use `getPools/{blockchainId}/factory-crypto` instead</i>\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getFactoryPools": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "Returns pools in Curve’s legacy Ethereum factory, which has been superseded for years now\n<i>Legacy: in most situations, you’ll want to focus on newer pools with `getPools/all/ethereum`</i>\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getFactoryTVL": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "<i>Deprecated: please use `getPools/ethereum/factory` instead</i>\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getFactoryV2Pools/{blockchainId}": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "<i>Deprecated: please use `getPools/{blockchainId}/factory` instead</i>\n",
        "parameters": [{ "$ref": "#/components/parameters/blockchainId" }],
        "responses": { "200": { "description": null } }
      }
    },
    "/getMainPoolsAPYs/{blockchainId}": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "Returns *inaccurate* volume and base APY data for `main` registry pools on chains that aren’t indexed by either the [Curve Prices API](https://prices.curve.finance/feeds-docs) or the [Curve subgraphs](https://github.com/curvefi/volume-subgraphs).\nData returned by this endpoint is necessarily inaccurate due to the manual chain-walking involved, coupled with the limitations of RPC endpoints available for this subset of chains. Using this endpoint should be considered an imperfect last resort.\nIf the chain for which you want to retrieve volume and base APY data is available through either [`/getVolumes/{blockchainId}`](#/default/get_getVolumes__blockchainId_) or [`getSubgraphData/[blockchainId]`](#/default/get_getSubgraphData__blockchainId_), please use these.\n\nNote: At the moment, all chains with a `main` registry have support in one of the endpoints mentioned above. This endpoint will not return data for any chain anymore.\n",
        "parameters": [
          {
            "in": "path",
            "name": "blockchainId",
            "required": true,
            "schema": { "type": "string", "enum": [] }
          }
        ],
        "responses": { "200": { "description": null } }
      }
    },
    "/getMainPoolsGaugeRewards": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "Returns Ethereum main registry pools gauge rewards\n<i>Deprecated: please use `getPools/ethereum/main` instead</i>\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getMainRegistryPools": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "Returns Ethereum main registry pools addresses as an array\n<i>Deprecated: please use `getPools/ethereum/main` instead</i>\n",
        "responses": { "200": { "description": null } }
      }
    },
    "/getMainRegistryPoolsAndLpTokens": {
      "get": {
        "deprecated": true,
        "tags": ["Deprecated"],
        "description": "Returns an array of shape `{ address, lpTokenAddress }` for Ethereum main registry pools\n<i>Deprecated: please use `getPools/ethereum/main` instead</i>\n",
        "responses": { "200": { "description": null } }
      }
    }
  },
  "tags": []
}
